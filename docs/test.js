const test = require('tape');
const createFCSObjFromDocs = require('./index.js')

test('test if financial services object is ...', async function (t) {
    const result = await createFCSObjFromDocs("./README.md");
    console.log(result)
    t.ok(result, "obj is truthy");
    t.ok(result.financial_crypto_services, "includes first level object")
    t.ok(result.financial_crypto_services.crypto_exchanges, "includes second level object")
    t.ok(result.financial_crypto_services.crypto_exchanges.centralized_exchanges_cex, "includes third level object")
    t.ok(result.financial_crypto_services.crypto_exchanges.decentralized_exchanges_dex, "includes third level object")
    t.ok(result.financial_crypto_services.crypto_exchanges.other_notable_exchanges, "includes third level object")
    t.ok(result.financial_crypto_services.crypto_custodians, "includes second level object")
    t.ok(result.financial_crypto_services.crypto_asset_management_companies, "includes second level object")
    t.ok(result.financial_crypto_services.crypto_lending_platforms, "includes second level object")
    t.ok(result.financial_crypto_services.decentralized_crypto_lending_platforms_defi, "includes second level object")
    t.ok(result.financial_crypto_services.crypto_borrowing_platforms, "includes second level object")
    t.ok(result.financial_crypto_services.decentralized_finance_defi_platforms, "includes second level object")
    t.ok(result.financial_crypto_services.decentralized_finance_defi_platforms.decentralized_exchanges_dex, "includes third level object")
    t.ok(result.financial_crypto_services.decentralized_finance_defi_platforms.decentralized_lending_and_borrowing, "includes third level object")
    t.ok(result.financial_crypto_services.decentralized_finance_defi_platforms.yield_farming_platforms, "includes third level object")
    t.ok(result.financial_crypto_services.decentralized_finance_defi_platforms.other_defi_platforms, "includes third level object")
    t.ok(result.financial_crypto_services.non_fungible_token_nft_marketplaces, "includes second level object")
    t.ok(result.financial_crypto_services.non_fungible_token_nft_marketplaces.general_marketplaces, "includes third level object")
    t.ok(result.financial_crypto_services.non_fungible_token_nft_marketplaces.specialized_marketplaces, "includes third level object")
    t.ok(result.financial_crypto_services.non_fungible_token_nft_marketplaces.other_notable_marketplaces, "includes third level object")
    t.ok(result.financial_crypto_services.crypto_payment_processors, "includes second level object")
    t.ok(result.financial_crypto_services.crypto2fiat_on_ramps_and_fiat2crypto_off_ramps, "includes third level object")
    t.ok(result.financial_crypto_services.crypto_tax_services, "includes second level object")
    t.ok(result.financial_crypto_services.crypto_tax_services.software, "includes third level object")
    t.ok(result.financial_crypto_services.crypto_tax_services.accountants, "includes third level object")
    t.ok(result.financial_crypto_services.crypto_tax_services.additional_resources, "includes third level object")
    t.ok(result.financial_crypto_services.crypto_insurance, "includes second level object")
    t.ok(result.financial_crypto_services.crypto_insurance.traditional, "includes third level object")
    t.ok(result.financial_crypto_services.crypto_insurance.defi, "includes third level object")
});